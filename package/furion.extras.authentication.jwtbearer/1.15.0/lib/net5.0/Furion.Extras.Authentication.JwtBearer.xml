<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Furion.Extras.Authentication.JwtBearer</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Extensions.DependencyInjection.JWTAuthorizationServiceCollectionExtensions">
            <summary>
            JWT 授权服务拓展类
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.JWTAuthorizationServiceCollectionExtensions.AddJwt(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.Object,System.Action{Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerOptions},System.Boolean)">
            <summary>
            添加 JWT 授权
            </summary>
            <param name="authenticationBuilder"></param>
            <param name="tokenValidationParameters">token 验证参数</param>
            <param name="jwtBearerConfigure"></param>
            <param name="enableGlobalAuthorize">启动全局授权</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.JWTAuthorizationServiceCollectionExtensions.AddJwt(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.AspNetCore.Authentication.AuthenticationOptions},System.Object,System.Action{Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerOptions})">
            <summary>
            添加 JWT 授权
            </summary>
            <param name="services"></param>
            <param name="authenticationConfigure">授权配置</param>
            <param name="tokenValidationParameters">token 验证参数</param>
            <param name="jwtBearerConfigure"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.JWTAuthorizationServiceCollectionExtensions.AddJwt``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.AspNetCore.Authentication.AuthenticationOptions},System.Object,System.Action{Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerOptions},System.Boolean)">
            <summary>
            添加 JWT 授权
            </summary>
            <typeparam name="TAuthorizationHandler"></typeparam>
            <param name="services"></param>
            <param name="authenticationConfigure"></param>
            <param name="tokenValidationParameters"></param>
            <param name="jwtBearerConfigure"></param>
            <param name="enableGlobalAuthorize"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.JWTAuthorizationServiceCollectionExtensions.ConfigureJWTOptions(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            添加 JWT 授权
            </summary>
            <param name="services"></param>
        </member>
        <member name="T:Furion.DataEncryption.JWTEncryption">
            <summary>
            JWT 加解密
            </summary>
        </member>
        <member name="M:Furion.DataEncryption.JWTEncryption.Encrypt(System.Collections.Generic.Dictionary{System.String,System.Object},System.Nullable{System.Int64})">
            <summary>
            生成 Token
            </summary>
            <param name="payload"></param>
            <param name="expiredTime"></param>
            <returns></returns>
        </member>
        <member name="M:Furion.DataEncryption.JWTEncryption.Encrypt(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            生成 Token
            </summary>
            <param name="issuerSigningKey"></param>
            <param name="payload"></param>
            <returns></returns>
        </member>
        <member name="M:Furion.DataEncryption.JWTEncryption.Encrypt(System.String,System.String)">
            <summary>
            生成 Token
            </summary>
            <param name="issuerSigningKey"></param>
            <param name="payload"></param>
            <returns></returns>
        </member>
        <member name="M:Furion.DataEncryption.JWTEncryption.GenerateRefreshToken(System.String,System.Int32)">
            <summary>
            生成刷新 Token
            </summary>
            <param name="accessToken"></param>
            <param name="days"></param>
            <returns></returns>
        </member>
        <member name="M:Furion.DataEncryption.JWTEncryption.Exchange(System.String,System.String,System.Nullable{System.Int64})">
            <summary>
            通过过期Token 和 刷新Token 换取新的 Token
            </summary>
            <param name="expiredToken"></param>
            <param name="refreshToken"></param>
            <param name="expiredTime"></param>
            <returns></returns>
        </member>
        <member name="M:Furion.DataEncryption.JWTEncryption.AutoRefreshToken(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext,Microsoft.AspNetCore.Http.DefaultHttpContext,System.Nullable{System.Int64},System.Int32)">
            <summary>
            自动刷新 Token 信息
            </summary>
            <param name="context"></param>
            <param name="httpContext"></param>
            <param name="expiredTime"></param>
            <param name="days"></param>
            <returns></returns>
        </member>
        <member name="M:Furion.DataEncryption.JWTEncryption.Validate(System.String)">
            <summary>
            验证 Token
            </summary>
            <param name="accessToken"></param>
            <returns></returns>
        </member>
        <member name="M:Furion.DataEncryption.JWTEncryption.ValidateJwtBearerToken(Microsoft.AspNetCore.Http.DefaultHttpContext,Microsoft.IdentityModel.JsonWebTokens.JsonWebToken@,System.String)">
            <summary>
            验证 Token
            </summary>
            <param name="httpContext"></param>
            <param name="token"></param>
            <param name="headerKey"></param>
            <returns></returns>
        </member>
        <member name="M:Furion.DataEncryption.JWTEncryption.ReadJwtToken(System.String)">
            <summary>
            读取 Token，不含验证
            </summary>
            <param name="accessToken"></param>
            <returns></returns>
        </member>
        <member name="M:Furion.DataEncryption.JWTEncryption.GetJwtBearerToken(Microsoft.AspNetCore.Http.DefaultHttpContext,System.String)">
            <summary>
            获取 JWT Bearer Token
            </summary>
            <param name="httpContext"></param>
            <param name="headerKey"></param>
            <returns></returns>
        </member>
        <member name="M:Furion.DataEncryption.JWTEncryption.GetJWTSettings">
            <summary>
            获取 JWT 配置
            </summary>
            <returns></returns>
        </member>
        <member name="M:Furion.DataEncryption.JWTEncryption.CreateTokenValidationParameters(Furion.Authorization.JWTSettingsOptions)">
            <summary>
            生成Token验证参数
            </summary>
            <param name="jwtSettings"></param>
            <returns></returns>
        </member>
        <member name="M:Furion.DataEncryption.JWTEncryption.CombinePayload(System.Collections.Generic.Dictionary{System.String,System.Object},System.Nullable{System.Int64})">
            <summary>
            组合 Claims 负荷
            </summary>
            <param name="payload"></param>
            <param name="expiredTime">过期时间，单位：分钟</param>
            <returns></returns>
        </member>
        <member name="F:Furion.DataEncryption.JWTEncryption.StationaryClaimTypes">
            <summary>
            固定的 Claim 类型
            </summary>
        </member>
        <member name="T:Furion.Authorization.JWTSettingsOptions">
            <summary>
            Jwt 配置
            </summary>
        </member>
        <member name="P:Furion.Authorization.JWTSettingsOptions.ValidateIssuerSigningKey">
            <summary>
            验证签发方密钥
            </summary>
        </member>
        <member name="P:Furion.Authorization.JWTSettingsOptions.IssuerSigningKey">
            <summary>
            签发方密钥
            </summary>
        </member>
        <member name="P:Furion.Authorization.JWTSettingsOptions.ValidateIssuer">
            <summary>
            验证签发方
            </summary>
        </member>
        <member name="P:Furion.Authorization.JWTSettingsOptions.ValidIssuer">
            <summary>
            签发方
            </summary>
        </member>
        <member name="P:Furion.Authorization.JWTSettingsOptions.ValidateAudience">
            <summary>
            验证签收方
            </summary>
        </member>
        <member name="P:Furion.Authorization.JWTSettingsOptions.ValidAudience">
            <summary>
            签收方
            </summary>
        </member>
        <member name="P:Furion.Authorization.JWTSettingsOptions.ValidateLifetime">
            <summary>
            验证生存期
            </summary>
        </member>
        <member name="P:Furion.Authorization.JWTSettingsOptions.ClockSkew">
            <summary>
            过期时间容错值，解决服务器端时间不同步问题（秒）
            </summary>
        </member>
        <member name="P:Furion.Authorization.JWTSettingsOptions.ExpiredTime">
            <summary>
            过期时间（分钟）
            </summary>
        </member>
    </members>
</doc>
